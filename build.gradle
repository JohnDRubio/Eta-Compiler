buildscript {
    repositories {
        flatDir {
            dirs 'deps/libs/plugins'
        }
    }
    dependencies {
        classpath fileTree(dir: 'deps/libs/plugins', include: '*.jar')
    }
}

// comment the plugins block below when you're building offline
// plugins {
//     id 'java'
//     id 'com.github.johnrengelman.shadow' version '7.1.2'
//  }

 repositories {
    //  mavenCentral() // used to download dependencies, comment this when building offline
    flatDir (dir: 'deps/libs/plugins')
    flatDir (dir: 'deps/libs/test')
    flatDir (dir: 'deps/libs/main')
 }

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

test {
    useJUnitPlatform()
}

dependencies {
    implementation fileTree(dir: 'deps/libs/main', include: '*.jar')
    implementation fileTree(dir: 'deps/libs/test', include: '*.jar')
    implementation fileTree(dir: 'deps/libs/plugins', include: '*.jar')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    // add more dependencies here
    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.5.0'

}

group 'org.awesome-group'
version '1.0-SNAPSHOT'

shadowJar {
    archiveBaseName.set('awesome-etac')
    manifest {
        attributes 'Main-Class' : 'main.java.jdr299zdh5cew256ans96.cli'
    }
}

build {
    dependsOn 'shadowJar'
}

task copyMainDependenciesToLib(type: Copy) {
    includeEmptyDirs = true
    into "deps/libs/main"
    from configurations.runtimeClasspath
}

task copyTestDependenciesToLib(type: Copy) {
    includeEmptyDirs = true
    into "deps/libs/test"
    from configurations.testRuntimeClasspath - configurations.runtimeClasspath
}

task copyCompileOnlyDependenciesToLib(type: Copy) {
    includeEmptyDirs = true
    into "deps/libs/compile-only"
    from configurations.compileClasspath - configurations.runtimeClasspath
}

task copyPluginJarsToLib(type: Copy) {
    includeEmptyDirs = true
    into "deps/libs/plugins"
    from buildscript.configurations.classpath
}

task copyDependenciesToLib{
    dependsOn 'copyMainDependenciesToLib'
    dependsOn 'copyTestDependenciesToLib'
    dependsOn 'copyCompileOnlyDependenciesToLib'
    dependsOn 'copyPluginJarsToLib'
}